application:
  title: @project.name@
  version: @project.version@
  group: @project.groupId@

bookshelf:
  isbn-lookup:
    service: https://isbn-lookup.org/search
  string-value: Hallo

spring:
  datasource:
    url: jdbc:postgresql://tai.db.elephantsql.com/idbgdfkx
    username: idbgdfkx
    password: ${PG_PASSWORD}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
    open-in-view: false
    # generate-ddl: true # By default, DDL statements will only be generated for embedded databases.
    # By default, Spring Boot will try to populate the database from data.sql on startup,
    # i.e. before JPA has the opportunity to generate DDL statements from classes annotated with @Entity.
    defer-datasource-initialization: true
  sql:
    init:
      # The default value is 'embedded', which only works for in-memory databases.
      # Since we're using a 'non-embedded' database here, we now need to set this to 'always'.
      mode: always
  h2:
    console:
      enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
